// Klib ABI Dump
// Targets: [linuxArm64, linuxX64, macosArm64, macosX64, mingwX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <cn.rtast.rob:ronebot-concurrency>
final class <#A: kotlin/Any?, #B: kotlin/Any?> cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap { // cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap|null[0]
    constructor <init>() // cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap.<init>|<init>(){}[0]

    final fun containsKey(#A): kotlin/Boolean // cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap.containsKey|containsKey(1:0){}[0]
    final fun get(#A): #B? // cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap.get|get(1:0){}[0]
    final fun put(#A, #B) // cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap.put|put(1:0;1:1){}[0]
    final fun remove(#A): #B? // cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap.remove|remove(1:0){}[0]
    final fun set(#A, #B) // cn.rtast.rob.ext.utils.concurrency/ThreadSafeMap.set|set(1:0;1:1){}[0]
}
